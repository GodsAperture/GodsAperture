(*Successfully reimplemented the differentiation function in the fewest lines possible for the basic mathematical functions.*)

Der[exp_, var_] :=
  	(*Level here produces a list of what all exists in the expression \
'exp' and then checks to see if it is only the variable 'var'. 
  If it is the variable, then it returns 1, 
  if not then it checks the length and if the length is greater than \
1, then it goes to differentiation. If it isn't greater than 1, 
  it goes to 0.*)
  (If[(Length[Level[exp, {0, Infinity}]] == 1
      &&
      Level[exp, {0, Infinity}][[1]] == var),
    
    1,
    
    	(*The lines below represent the differentiation rules that allow \
for a proper result*)
    (exp /.
      {Equal[a_, b_] :> Equal[Der[a, var], Der[b, var]],
       Plus[a_, b_] :> Plus[Der[a, var], Der[b, var]],
       Times[a_, b_] :> Times[Der[a, var], b] + Times[a, Der[b, var]],
       Power[a_, b_] :> 
        a^(b - 1) Der[a, var] b + Log[a] a^b Der[b, var],
       Divide[a_, b_] :> Divide[Der[a, var] b - a Der[b, var], b^2],
       
       (*This is a list of common derivatives*)
       Sin[a_] :> Cos[a] Der[a, var],
       Cos[a_] :> -Sin[a] Der[a, var],
       Sec[a_] :> Sec[a] Tan[a] Der[a, var],
       Csc[a_] :> -Csc[a] Cot[a] Der[a, var],
       Tan[a_] :> Sec[a]^2 Der[a, var],
       Log[a_] :> Der[a, var]/a,
       ArcSin[a_] :> Der[a, var]/Sqrt[1 - a^2],
       ArcCos[a_] :> -Der[a, var]/Sqrt[1 - a^2],
       ArcSec[a_] :> Der[a, var]/(a^2 Sqrt[1 - 1/a^2]),
       ArcCsc[a_] :> -Der[a, var]/(a^2 Sqrt[1 - 1/a^2]),
       ArcTan[a_] :> Der[a, var]/(a^2 + 1),
       
       	(*This is the extended chain rule for multivariable functions*)

       u_[
         a__] :> (Table[
           Der[u[a], {a}[[i]]], {i, 1, Length[{a}]}]).(Map[
           Function[Der[#, var]], {a}])}),
    
    If[TrueQ[exp == var], Derivative[1][exp], 0]]);
